
PROJECT-SETUP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000214  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000320  08000328  00010328  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000320  08000320  00010328  2**0
                  CONTENTS
  4 .ARM          00000000  08000320  08000320  00010328  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000320  08000328  00010328  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000320  08000320  00010320  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000324  08000324  00010324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010328  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000328  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000328  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010328  2**0
                  CONTENTS, READONLY
 12 .debug_info   000004cd  00000000  00000000  00010351  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000246  00000000  00000000  0001081e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  00010a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  00010b00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010094  00000000  00000000  00010b60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001017  00000000  00000000  00020bf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00054454  00000000  00000000  00021c0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0007605f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000100  00000000  00000000  000760b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000000 	.word	0x20000000
 8000128:	00000000 	.word	0x00000000
 800012c:	08000308 	.word	0x08000308

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000004 	.word	0x20000004
 8000148:	08000308 	.word	0x08000308

0800014c <main>:
#include "main.h"
#include "rcc.h"

int main(void)
{
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
  // ConfigHSE at 72Mhz
  rcc_HSE_config();
 8000150:	f000 f808 	bl	8000164 <rcc_HSE_config>
  while(1)
 8000154:	e7fe      	b.n	8000154 <main+0x8>

08000156 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000156:	b480      	push	{r7}
 8000158:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800015a:	bf00      	nop
 800015c:	46bd      	mov	sp, r7
 800015e:	bc80      	pop	{r7}
 8000160:	4770      	bx	lr
	...

08000164 <rcc_HSE_config>:
/**
 * HSE Configuration Setup
 */

void rcc_HSE_config(void)
	{
 8000164:	b480      	push	{r7}
 8000166:	af00      	add	r7, sp, #0
	 *  APB1Prescalar  = 2 -->  36,72Mhz
	 *  APB2Prescalar  = 1 -->  72MHz Both
	 *  ADC_Prescalar  = 6 -->  12Mhz
	*/
		//PLL CONFIGUTRTION
		RCC->CFGR &= ~(RCC_CFGR_PLLMULL);
 8000168:	4b40      	ldr	r3, [pc, #256]	; (800026c <rcc_HSE_config+0x108>)
 800016a:	685b      	ldr	r3, [r3, #4]
 800016c:	4a3f      	ldr	r2, [pc, #252]	; (800026c <rcc_HSE_config+0x108>)
 800016e:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 8000172:	6053      	str	r3, [r2, #4]
		RCC->CFGR |= (RCC_CFGR_PLLMULL9);
 8000174:	4b3d      	ldr	r3, [pc, #244]	; (800026c <rcc_HSE_config+0x108>)
 8000176:	685b      	ldr	r3, [r3, #4]
 8000178:	4a3c      	ldr	r2, [pc, #240]	; (800026c <rcc_HSE_config+0x108>)
 800017a:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 800017e:	6053      	str	r3, [r2, #4]
		//USB DIVIDER
		RCC->CFGR &= ~(RCC_CFGR_USBPRE);
 8000180:	4b3a      	ldr	r3, [pc, #232]	; (800026c <rcc_HSE_config+0x108>)
 8000182:	685b      	ldr	r3, [r3, #4]
 8000184:	4a39      	ldr	r2, [pc, #228]	; (800026c <rcc_HSE_config+0x108>)
 8000186:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800018a:	6053      	str	r3, [r2, #4]
		//HSEOsilator
		RCC->CR &= ~(RCC_CR_HSEON);
 800018c:	4b37      	ldr	r3, [pc, #220]	; (800026c <rcc_HSE_config+0x108>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	4a36      	ldr	r2, [pc, #216]	; (800026c <rcc_HSE_config+0x108>)
 8000192:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000196:	6013      	str	r3, [r2, #0]
		while((RCC->CR & RCC_CR_HSERDY)==0);
 8000198:	bf00      	nop
 800019a:	4b34      	ldr	r3, [pc, #208]	; (800026c <rcc_HSE_config+0x108>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80001a2:	2b00      	cmp	r3, #0
 80001a4:	d0f9      	beq.n	800019a <rcc_HSE_config+0x36>
		//HSE as PLL source
		RCC->CFGR &= ~(RCC_CFGR_PLLSRC);
 80001a6:	4b31      	ldr	r3, [pc, #196]	; (800026c <rcc_HSE_config+0x108>)
 80001a8:	685b      	ldr	r3, [r3, #4]
 80001aa:	4a30      	ldr	r2, [pc, #192]	; (800026c <rcc_HSE_config+0x108>)
 80001ac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80001b0:	6053      	str	r3, [r2, #4]
		RCC->CFGR |= (RCC_CFGR_PLLSRC);
 80001b2:	4b2e      	ldr	r3, [pc, #184]	; (800026c <rcc_HSE_config+0x108>)
 80001b4:	685b      	ldr	r3, [r3, #4]
 80001b6:	4a2d      	ldr	r2, [pc, #180]	; (800026c <rcc_HSE_config+0x108>)
 80001b8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80001bc:	6053      	str	r3, [r2, #4]
		RCC->CR &= ~(RCC_CR_PLLON);
 80001be:	4b2b      	ldr	r3, [pc, #172]	; (800026c <rcc_HSE_config+0x108>)
 80001c0:	681b      	ldr	r3, [r3, #0]
 80001c2:	4a2a      	ldr	r2, [pc, #168]	; (800026c <rcc_HSE_config+0x108>)
 80001c4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80001c8:	6013      	str	r3, [r2, #0]
		RCC->CR |= (RCC_CR_PLLON);
 80001ca:	4b28      	ldr	r3, [pc, #160]	; (800026c <rcc_HSE_config+0x108>)
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	4a27      	ldr	r2, [pc, #156]	; (800026c <rcc_HSE_config+0x108>)
 80001d0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001d4:	6013      	str	r3, [r2, #0]
		while((RCC->CR & RCC_CR_HSERDY)==0);
 80001d6:	bf00      	nop
 80001d8:	4b24      	ldr	r3, [pc, #144]	; (800026c <rcc_HSE_config+0x108>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80001e0:	2b00      	cmp	r3, #0
 80001e2:	d0f9      	beq.n	80001d8 <rcc_HSE_config+0x74>
	   //Flash pre-fetch enable and wait-state=2
	   //0WS: 0-24MHz
	   //1WS: 24-48MHz
	   //2WS: 48-72MHz
	   FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 80001e4:	4b22      	ldr	r3, [pc, #136]	; (8000270 <rcc_HSE_config+0x10c>)
 80001e6:	2212      	movs	r2, #18
 80001e8:	601a      	str	r2, [r3, #0]
	   //Select PLL as main System Clock source
	   RCC->CFGR &= ~(RCC_CFGR_SW);
 80001ea:	4b20      	ldr	r3, [pc, #128]	; (800026c <rcc_HSE_config+0x108>)
 80001ec:	685b      	ldr	r3, [r3, #4]
 80001ee:	4a1f      	ldr	r2, [pc, #124]	; (800026c <rcc_HSE_config+0x108>)
 80001f0:	f023 0303 	bic.w	r3, r3, #3
 80001f4:	6053      	str	r3, [r2, #4]
	   RCC->CFGR |= (RCC_CFGR_SW_1);
 80001f6:	4b1d      	ldr	r3, [pc, #116]	; (800026c <rcc_HSE_config+0x108>)
 80001f8:	685b      	ldr	r3, [r3, #4]
 80001fa:	4a1c      	ldr	r2, [pc, #112]	; (800026c <rcc_HSE_config+0x108>)
 80001fc:	f043 0302 	orr.w	r3, r3, #2
 8000200:	6053      	str	r3, [r2, #4]
	   while((RCC->CFGR & RCC_CFGR_SWS_1)==0);
 8000202:	bf00      	nop
 8000204:	4b19      	ldr	r3, [pc, #100]	; (800026c <rcc_HSE_config+0x108>)
 8000206:	685b      	ldr	r3, [r3, #4]
 8000208:	f003 0308 	and.w	r3, r3, #8
 800020c:	2b00      	cmp	r3, #0
 800020e:	d0f9      	beq.n	8000204 <rcc_HSE_config+0xa0>
	   //Peripherals Clock Setup
	   //AHB PreScalar Setup
	   RCC->CFGR &= ~(RCC_CFGR_HPRE);
 8000210:	4b16      	ldr	r3, [pc, #88]	; (800026c <rcc_HSE_config+0x108>)
 8000212:	685b      	ldr	r3, [r3, #4]
 8000214:	4a15      	ldr	r2, [pc, #84]	; (800026c <rcc_HSE_config+0x108>)
 8000216:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800021a:	6053      	str	r3, [r2, #4]
	   RCC->CFGR |= (RCC_CFGR_HPRE_0);
 800021c:	4b13      	ldr	r3, [pc, #76]	; (800026c <rcc_HSE_config+0x108>)
 800021e:	685b      	ldr	r3, [r3, #4]
 8000220:	4a12      	ldr	r2, [pc, #72]	; (800026c <rcc_HSE_config+0x108>)
 8000222:	f043 0310 	orr.w	r3, r3, #16
 8000226:	6053      	str	r3, [r2, #4]
	   //Peripherals Clock Setup
	   //APB PreScalar Setup
	   RCC->CFGR &= ~(RCC_CFGR_PPRE1);
 8000228:	4b10      	ldr	r3, [pc, #64]	; (800026c <rcc_HSE_config+0x108>)
 800022a:	685b      	ldr	r3, [r3, #4]
 800022c:	4a0f      	ldr	r2, [pc, #60]	; (800026c <rcc_HSE_config+0x108>)
 800022e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8000232:	6053      	str	r3, [r2, #4]
	   RCC->CFGR |= (RCC_CFGR_PPRE1_2);
 8000234:	4b0d      	ldr	r3, [pc, #52]	; (800026c <rcc_HSE_config+0x108>)
 8000236:	685b      	ldr	r3, [r3, #4]
 8000238:	4a0c      	ldr	r2, [pc, #48]	; (800026c <rcc_HSE_config+0x108>)
 800023a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800023e:	6053      	str	r3, [r2, #4]
	   //Peripherals Clock Setup
	   //APB2 PreScalar Setup
	   RCC->CFGR &= ~(RCC_CFGR_PPRE2);
 8000240:	4b0a      	ldr	r3, [pc, #40]	; (800026c <rcc_HSE_config+0x108>)
 8000242:	685b      	ldr	r3, [r3, #4]
 8000244:	4a09      	ldr	r2, [pc, #36]	; (800026c <rcc_HSE_config+0x108>)
 8000246:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 800024a:	6053      	str	r3, [r2, #4]
	   //Peripherals Clock Setup
	   //ADC PreScalar Setup
	   RCC->CFGR &= ~(RCC_CFGR_ADCPRE);
 800024c:	4b07      	ldr	r3, [pc, #28]	; (800026c <rcc_HSE_config+0x108>)
 800024e:	685b      	ldr	r3, [r3, #4]
 8000250:	4a06      	ldr	r2, [pc, #24]	; (800026c <rcc_HSE_config+0x108>)
 8000252:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000256:	6053      	str	r3, [r2, #4]
	   RCC->CFGR |=  (RCC_CFGR_ADCPRE_1);
 8000258:	4b04      	ldr	r3, [pc, #16]	; (800026c <rcc_HSE_config+0x108>)
 800025a:	685b      	ldr	r3, [r3, #4]
 800025c:	4a03      	ldr	r2, [pc, #12]	; (800026c <rcc_HSE_config+0x108>)
 800025e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000262:	6053      	str	r3, [r2, #4]

	}
 8000264:	bf00      	nop
 8000266:	46bd      	mov	sp, r7
 8000268:	bc80      	pop	{r7}
 800026a:	4770      	bx	lr
 800026c:	40021000 	.word	0x40021000
 8000270:	40022000 	.word	0x40022000

08000274 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	; (80002a8 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	; (80002ac <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	; (80002b0 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	; (80002b4 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	; (80002b8 <LoopFillZerobss+0x22>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800029a:	f7ff ff5c 	bl	8000156 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800029e:	f000 f80f 	bl	80002c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a2:	f7ff ff53 	bl	800014c <main>
  bx lr
 80002a6:	4770      	bx	lr
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	08000328 	.word	0x08000328
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC1_2_IRQHandler>
	...

080002c0 <__libc_init_array>:
 80002c0:	b570      	push	{r4, r5, r6, lr}
 80002c2:	2600      	movs	r6, #0
 80002c4:	4d0c      	ldr	r5, [pc, #48]	; (80002f8 <__libc_init_array+0x38>)
 80002c6:	4c0d      	ldr	r4, [pc, #52]	; (80002fc <__libc_init_array+0x3c>)
 80002c8:	1b64      	subs	r4, r4, r5
 80002ca:	10a4      	asrs	r4, r4, #2
 80002cc:	42a6      	cmp	r6, r4
 80002ce:	d109      	bne.n	80002e4 <__libc_init_array+0x24>
 80002d0:	f000 f81a 	bl	8000308 <_init>
 80002d4:	2600      	movs	r6, #0
 80002d6:	4d0a      	ldr	r5, [pc, #40]	; (8000300 <__libc_init_array+0x40>)
 80002d8:	4c0a      	ldr	r4, [pc, #40]	; (8000304 <__libc_init_array+0x44>)
 80002da:	1b64      	subs	r4, r4, r5
 80002dc:	10a4      	asrs	r4, r4, #2
 80002de:	42a6      	cmp	r6, r4
 80002e0:	d105      	bne.n	80002ee <__libc_init_array+0x2e>
 80002e2:	bd70      	pop	{r4, r5, r6, pc}
 80002e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002e8:	4798      	blx	r3
 80002ea:	3601      	adds	r6, #1
 80002ec:	e7ee      	b.n	80002cc <__libc_init_array+0xc>
 80002ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f2:	4798      	blx	r3
 80002f4:	3601      	adds	r6, #1
 80002f6:	e7f2      	b.n	80002de <__libc_init_array+0x1e>
 80002f8:	08000320 	.word	0x08000320
 80002fc:	08000320 	.word	0x08000320
 8000300:	08000320 	.word	0x08000320
 8000304:	08000324 	.word	0x08000324

08000308 <_init>:
 8000308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800030a:	bf00      	nop
 800030c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800030e:	bc08      	pop	{r3}
 8000310:	469e      	mov	lr, r3
 8000312:	4770      	bx	lr

08000314 <_fini>:
 8000314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000316:	bf00      	nop
 8000318:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031a:	bc08      	pop	{r3}
 800031c:	469e      	mov	lr, r3
 800031e:	4770      	bx	lr
