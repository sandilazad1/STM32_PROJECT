/*
 * uart.c
 *
 *  Created on: 24 Aug 2022
 *      Author: sandilazad
 */

#include "uart.h"

/**
 *  @ brief UASRT & GPIO CONFIG
 */

void uart_Uart1_GpioA_Config(){
	// Enable port clock
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
	// Mode AF and Fast
	RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
	// Output Feq-set
	GPIOA->CRH &=~(GPIO_CRH_MODE9);
	GPIOA->CRH |= GPIO_CRH_MODE9_0;
	GPIOA->CRH &=~ GPIO_CRH_CNF9;
	GPIOA->CRH |=  GPIO_CRH_CNF9_1;

	GPIOA->CRH &=~(GPIO_CRH_MODE10);
	GPIOA->CRH &=~(GPIO_CRH_CNF10);
	GPIOA->CRH |= GPIO_CRH_CNF10_0;
	// Map to PA09-TX PA10-RX
	AFIO->MAPR &=~(AFIO_MAPR_USART1_REMAP);
};

/**
 *  @brief UASRT CONFIG
 */

void uart_Uart1_Config(){
	  //UART clock enable
	  RCC->APB2ENR |= RCC_APB2ENR_USART1EN;

	  //Transmit Enable
	  USART1->CR1 |= USART_CR1_TE;
	  //Receive Enable
	  USART1->CR1 |= USART_CR1_RE;
	  //Parity - Even
	  USART1->CR1 &= ~(USART_CR1_PS);
	  //Parity Control Enable
	  USART1->CR1 &= ~(USART_CR1_PCE);
	  //Word length = 8bit
	  USART1->CR1 &= ~(USART_CR1_M);
	  //Stop bits = 1
	  USART1->CR2 &= ~(USART_CR2_STOP);
	  //Disable Hardware flow control (RTS, CTS)
	  USART1->CR3 &= ~(USART_CR3_CTSE);
	  USART1->CR3 &= ~(USART_CR3_RTSE);
	  //Set Baud rate to 115200 (72MHz = 39.0625 -> 39 / 1)
	  //BRR = 72MHz/115200/16 = 39.0625
	  //Mantissa = 39
	  //Fraction = .0625*16 = 1
	  USART1->BRR =0;
	  USART1->BRR |= (39UL << 4);
	  USART1->BRR |= (1UL << 0);
	  //Clear LINEN and CLKEN in CR2
	  USART1->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
	  //Clear SCEN, HDSEL and IREN in CR3
	  USART1->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
	  //Enable UART
	  USART1->CR1 |= USART_CR1_UE;

};

/**
 *  @brief UASRT TX CONFIG
 */

void uart_Tx_Config();
